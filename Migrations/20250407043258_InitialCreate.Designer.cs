// <auto-generated />
using System;
using BusTicket.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusTicket.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250407043258_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusTicket.Models.Entities.Bilet", b =>
                {
                    b.Property<int>("BiletID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiletID"));

                    b.Property<int>("KoltukNumarasi")
                        .HasColumnType("int");

                    b.Property<string>("PNR")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SatinAlmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeferID")
                        .HasColumnType("int");

                    b.Property<int>("YolcuID")
                        .HasColumnType("int");

                    b.HasKey("BiletID");

                    b.HasIndex("PNR")
                        .IsUnique();

                    b.HasIndex("SeferID");

                    b.HasIndex("YolcuID");

                    b.ToTable("Biletler");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Guzergah", b =>
                {
                    b.Property<int>("GuzergahID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuzergahID"));

                    b.Property<string>("KalkisSehri")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VarisSehri")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GuzergahID");

                    b.ToTable("Guzergahlar");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Koltuk", b =>
                {
                    b.Property<int>("KoltukID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KoltukID"));

                    b.Property<bool>("DoluMu")
                        .HasColumnType("bit");

                    b.Property<int>("KoltukNumarasi")
                        .HasColumnType("int");

                    b.Property<int>("SeferID")
                        .HasColumnType("int");

                    b.HasKey("KoltukID");

                    b.HasIndex("SeferID", "KoltukNumarasi")
                        .IsUnique();

                    b.ToTable("Koltuklar");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Otobus", b =>
                {
                    b.Property<int>("OtobusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtobusID"));

                    b.Property<int>("KoltukKapasitesi")
                        .HasColumnType("int");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("OtobusID");

                    b.ToTable("Otobusler");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Sefer", b =>
                {
                    b.Property<int>("SeferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeferID"));

                    b.Property<decimal>("BiletFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GuzergahID")
                        .HasColumnType("int");

                    b.Property<DateTime>("KalkisZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("OtobusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VarisZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("SeferID");

                    b.HasIndex("GuzergahID");

                    b.HasIndex("OtobusID");

                    b.ToTable("Seferler");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Yolcu", b =>
                {
                    b.Property<int>("YolcuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YolcuID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("YolcuID");

                    b.ToTable("Yolcular");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Bilet", b =>
                {
                    b.HasOne("BusTicket.Models.Entities.Sefer", "Sefer")
                        .WithMany("Biletler")
                        .HasForeignKey("SeferID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusTicket.Models.Entities.Yolcu", "Yolcu")
                        .WithMany("Biletler")
                        .HasForeignKey("YolcuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sefer");

                    b.Navigation("Yolcu");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Koltuk", b =>
                {
                    b.HasOne("BusTicket.Models.Entities.Sefer", "Sefer")
                        .WithMany("Koltuklar")
                        .HasForeignKey("SeferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sefer");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Sefer", b =>
                {
                    b.HasOne("BusTicket.Models.Entities.Guzergah", "Guzergah")
                        .WithMany("Seferler")
                        .HasForeignKey("GuzergahID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicket.Models.Entities.Otobus", "Otobus")
                        .WithMany("Seferler")
                        .HasForeignKey("OtobusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guzergah");

                    b.Navigation("Otobus");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Guzergah", b =>
                {
                    b.Navigation("Seferler");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Otobus", b =>
                {
                    b.Navigation("Seferler");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Sefer", b =>
                {
                    b.Navigation("Biletler");

                    b.Navigation("Koltuklar");
                });

            modelBuilder.Entity("BusTicket.Models.Entities.Yolcu", b =>
                {
                    b.Navigation("Biletler");
                });
#pragma warning restore 612, 618
        }
    }
}
